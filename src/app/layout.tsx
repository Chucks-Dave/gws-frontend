import type { Metadata } from "next";
import { QueryClient, QueryClientProvider } from "@tanstack/react-query";
import { Playfair_Display, Roboto } from "next/font/google";
import "./globals.css";
import { Provider } from "react-redux";
import { store, persistor } from "../../redux/store";
import { PersistGate } from "redux-persist/integration/react";
import { PersistQueryClientProvider } from "@tanstack/react-query-persist-client";
import { createSyncStoragePersister } from "@tanstack/query-sync-storage-persister";
const roboto = Roboto({
  subsets: ["latin"],
  display: "swap",
  weight: ["100", "300", "400", "500", "700", "900"],
  variable: "--font-roboto",
});
const playfair = Playfair_Display({
  subsets: ["latin"],
  display: "swap",
  weight: ["400", "500", "700", "900"],
  variable: "--font-playfair",
});
export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

// Create a client
const queryClient = new QueryClient({
  defaultOptions: {
    queries: {
      gcTime: 1000 * 60 * 60 * 24, // 24 hours
    },
  },
});

const persister = createSyncStoragePersister({
  storage: window.localStorage,
});

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <Provider store={store}>
        <PersistGate loading={null} persistor={persistor}>
          <QueryClientProvider client={queryClient}>
            <PersistQueryClientProvider
              client={queryClient}
              persistOptions={{ persister }}
            >
              <body
                className={`${roboto.variable} ${playfair.variable} antialiased`}
              >
                {children}
              </body>
            </PersistQueryClientProvider>
          </QueryClientProvider>
        </PersistGate>
      </Provider>
    </html>
  );
}
